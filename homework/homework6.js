// 1. Реализовать функцию, принимающую число (индекс в последовательности Фибоначчи), функция должна вернуть значение числа. Использовать рекурсию.
const fibo = (i) => {
    if (i <= 1) {
       return i;
    } else {
        return fibo(i-1) + fibo(i-2);
    }
}
console.log(`#1: ${fibo(3)}`);

// 2. Модернизировать написанную функцию, добавив кэширование
// (функция “”запоминает”” входной параметр и вычесленное значение, при следующем вызыве с этим же параметром, функция не вычисляет значение, а возвращает из памяти)
const getFibo = (() => {
    const cash = {};
    return (i) => {
        if (cash[i]) {
            console.log('Значение взято из кэша');
            return cash[i];
        } else {
            console.log(`Рассчитываю значение для индекса ${i}`);
            const fibo = (i) => {
                if (i <= 1) {
                    return i;
                } else {
                    return fibo(i-1) + fibo(i-2);
                }
            };
            console.log('Добавляем в кэш');
            cash[i] = fibo(i);
            return cash[i];
        }
    }
})();
console.log('#2 ==================');
console.log(`результат для индекса 3: ${getFibo(3)}`);
console.log('---------');
console.log(`результат для индекса 5: ${getFibo(5)}`);
console.log('---------');
console.log(`результат для индекса 3: ${getFibo(3)}`);
console.log('---------');
console.log(`результат для индекса 7: ${getFibo(7)}`);
console.log('==================');
